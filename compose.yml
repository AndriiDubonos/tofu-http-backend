services:
  tofu_http_backend:
    image: tofu_http_backend_image
    build:
      context: .
      dockerfile: ./docker/tofu_http_backend/Dockerfile
    ports:
      - "8000:8000"
    command: "python -m uvicorn main:app --host 0.0.0.0"
    networks:
      - app_network
    depends_on:
      tofu_http_backend_migrate:
        condition: service_completed_successfully

  tofu_http_backend_migrate:
    image: tofu_http_backend_image
    command: "alembic upgrade head"
    networks:
      - app_network
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:17
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tofu_http_backend_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d tofu_http_backend_db" ]
      interval: 2s
      timeout: 5s
      retries: 5

  minio:
    image: quay.io/minio/minio
    command: server /data --console-address ':9001'
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: user
      MINIO_ROOT_PASSWORD: password
    volumes:
      - minio_data:/data
    networks:
      - app_network
    depends_on:
      minio_init:
        condition: service_completed_successfully

  minio_init:
    image: busybox
    command: mkdir -p /data/states
    volumes:
      - minio_data:/data
    networks:
      - app_network

  terraform_usage:
    image: ghcr.io/opentofu/opentofu:latest
    volumes:
      - ./conf/terraform/usage:/terraform/
    networks:
      - app_network
    working_dir: /terraform/

  terraform_data_source:
    image: ghcr.io/opentofu/opentofu:latest
    volumes:
      - ./conf/terraform/data_source:/terraform/
    networks:
      - app_network
    working_dir: /terraform/

volumes:
  postgres_data:
  minio_data:

networks:
  app_network:
    driver: bridge
